name: Java CI with Gradle

on:
  push:
  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle wrapper
      run: ./gradlew build --no-daemon
    - name: Run app and test health
      run: |
        BOOT_WAIT_SECONDS=10
        LOG_FILE=app.log

        # start app in background
        java -jar build/libs/springboots2idemo-*.jar > $LOG_FILE 2>&1 &

        # wait for server start and test health
        sleep $BOOT_WAIT_SECONDS
        HEALTH=$(curl http://localhost:9000/health)

        # stop app
        PID=$(ps -ef | grep "springboots2idemo-" | grep -v grep | awk '{ print $2 }')
        if [ -z "$PID" ]
        then
            echo App is already stopped or did not start
            exit 1
        else
            echo "stop app (kill $PID)"
            kill $PID
        fi

        # print app logs
        echo "-- logs --"
        cat $LOG_FILE
        rm -f $LOG_FILE

        # test app health
        echo "-- test --"
        if [ "$HEALTH" = '{"status":"UP"}' ]; then
            echo "App started healthy"
        else
            echo "App not healthy"
            exit 1
        fi
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d-%s')"
    - name: Test with environment variables
      run: echo $TAG_NAME - $RELEASE_NAME
      env:
        TAG_NAME: nightly-tag-${{ steps.date.outputs.date }}
        RELEASE_NAME: nightly-release-${{ steps.date.outputs.date }}
    - name: Test with input
      uses: actions/hello-world-docker-action@master
      with:
        who-to-greet: Mona-the-Octocat-${{ steps.date.outputs.date }}
    - name: Clean Gradle build
      run: ./gradlew clean && rm -rf .gradle/
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag example-spring-boot-helloworld:latest
    - uses: docker/build-push-action@v2
      with:
        tags: example-spring-boot-helloworld:latest
        push: false
    - uses: addnab/docker-run-action@v3
      with:
        image: example-spring-boot-helloworld:latest
        run: echo "hello world"

  test:
    runs-on: ubuntu-latest
    services:
      spring-boot-app:
        image: example-spring-boot-helloworld:latest

    steps:
    - name: Run in container
      run: |
        echo This job does specify a container.
        echo It runs in the container instead of the VM.
        curl http://spring-boot-app:9000/health
